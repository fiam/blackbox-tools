name: Publish release

on:
  push:
    tags:
      - 'v*'
jobs:

  publish:
    strategy:
      matrix:
#        os: [ubuntu-20.04, macos-10.15, windows-2019]
        os: [macos-10.15]
        build_type: [static, shared]
        exclude:
          - os: windows-2019
            build_type: shared
    name: ${{ matrix.os }} (${{ matrix.build_type }})
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set variables
        id: vars
        shell: bash
        run: |
          if [ ${{ matrix.build_type }} == shared ]; then
            echo ::set-output name=USE_SYSTEM_LIBS::ON
          else
            echo ::set-output name=USE_SYSTEM_LIBS::OFF
          fi

      - name: Install Linux dependencies (common)
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        run: sudo apt-get update && sudo apt-get -y install build-essential gcc g++ cmake python3-pip zlib1g-dev xorg-dev libx11-xcb-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev xkb-data && sudo python3 -m pip install conan

      - name: Install Linux dependencies (shared)
        if: ${{ matrix.os == 'ubuntu-20.04' && matrix.build_type == 'shared' }}
        run: sudo apt-get -y install libcairo2-dev libfreetype-dev

      - name: Install macOS dependencies (common)
        if: ${{ matrix.os == 'macos-10.15' }}
        run: brew install cmake python3 && python3 -m pip install conan

      - name: Install macOS dependencies (shared)
        if: ${{ matrix.os == 'macos-10.15' && matrix.build_type == 'shared' }}
        run: brew install pkg-config cairo freetype

      - name: Install Windows dependencies
        if: ${{ matrix.os == 'windows-2019' }}
        run: pip3 install conan

      - name: Add Conan bincrafters remote
        run: conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Configure
        run: |
          mkdir -p build &&
          cd build &&
          cmake -DCMAKE_BUILD_TYPE=Release -DUSE_SYSTEM_LIBS=${{ steps.vars.outputs.USE_SYSTEM_LIBS }} ..; cat `/Users/runner/.conan/data/gperf/3.1/_/_/build/898a9aa06c32fd65090511934b1e1fedd9cde674/source_subfolder/lib/config.log

      - name: Build
        run: cd build && cmake --build . --target release

      - name: Upload binaries
        if: startsWith(github.ref, 'refs/tags/v')
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/blackbox-tools*
          file_glob: true
          overwrite: true
          tag: ${{ github.ref }}
